// <auto-generated />
using System;
using DiplomskiBlazor.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DiplomskiBlazor.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DiplomskiBlazor.Shared.DeoTela", b =>
                {
                    b.Property<int>("deoTelaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("deoTelaId"), 1L, 1);

                    b.Property<string>("nazivTela")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("deoTelaId");

                    b.ToTable("DeloviTela");
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.Korisnik", b =>
                {
                    b.Property<int>("korisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("korisnikId"), 1L, 1);

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("korisnickoIme")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lozinka")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("korisnikId");

                    b.ToTable("Korisnici");
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.Statistika", b =>
                {
                    b.Property<int>("statistikaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("statistikaId"), 1L, 1);

                    b.Property<DateTime>("datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("korisnikId")
                        .HasColumnType("int");

                    b.Property<double>("obimGrudi")
                        .HasColumnType("float");

                    b.Property<double>("obimKukova")
                        .HasColumnType("float");

                    b.Property<double>("obimStruka")
                        .HasColumnType("float");

                    b.Property<double>("tezina")
                        .HasColumnType("float");

                    b.Property<int>("visina")
                        .HasColumnType("int");

                    b.HasKey("statistikaId");

                    b.HasIndex("korisnikId");

                    b.ToTable("Statistike");
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.Vezba", b =>
                {
                    b.Property<int>("vezbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("vezbaId"), 1L, 1);

                    b.Property<string>("brojSerijaPonavljanja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("deoTelaId")
                        .HasColumnType("int");

                    b.Property<string>("nazivVezbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opisVezbe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("vezbaId");

                    b.HasIndex("deoTelaId");

                    b.ToTable("Vezbe");
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.Workout", b =>
                {
                    b.Property<int>("workoutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("workoutId"), 1L, 1);

                    b.Property<string>("nazivWorkouta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("opisWorkouta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("workoutId");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("KorisnikWorkout", b =>
                {
                    b.Property<int>("korisnicikorisnikId")
                        .HasColumnType("int");

                    b.Property<int>("workoutsworkoutId")
                        .HasColumnType("int");

                    b.HasKey("korisnicikorisnikId", "workoutsworkoutId");

                    b.HasIndex("workoutsworkoutId");

                    b.ToTable("KorisnikWorkout");
                });

            modelBuilder.Entity("VezbaWorkout", b =>
                {
                    b.Property<int>("vezbevezbaId")
                        .HasColumnType("int");

                    b.Property<int>("workoutsworkoutId")
                        .HasColumnType("int");

                    b.HasKey("vezbevezbaId", "workoutsworkoutId");

                    b.HasIndex("workoutsworkoutId");

                    b.ToTable("VezbaWorkout");
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.Statistika", b =>
                {
                    b.HasOne("DiplomskiBlazor.Shared.Korisnik", "korisnik")
                        .WithMany("statistike")
                        .HasForeignKey("korisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("korisnik");
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.Vezba", b =>
                {
                    b.HasOne("DiplomskiBlazor.Shared.DeoTela", "deoTela")
                        .WithMany("vezbe")
                        .HasForeignKey("deoTelaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("deoTela");
                });

            modelBuilder.Entity("KorisnikWorkout", b =>
                {
                    b.HasOne("DiplomskiBlazor.Shared.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("korisnicikorisnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiBlazor.Shared.Workout", null)
                        .WithMany()
                        .HasForeignKey("workoutsworkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VezbaWorkout", b =>
                {
                    b.HasOne("DiplomskiBlazor.Shared.Vezba", null)
                        .WithMany()
                        .HasForeignKey("vezbevezbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DiplomskiBlazor.Shared.Workout", null)
                        .WithMany()
                        .HasForeignKey("workoutsworkoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.DeoTela", b =>
                {
                    b.Navigation("vezbe");
                });

            modelBuilder.Entity("DiplomskiBlazor.Shared.Korisnik", b =>
                {
                    b.Navigation("statistike");
                });
#pragma warning restore 612, 618
        }
    }
}
